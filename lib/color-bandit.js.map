{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 1e90c9f0835e8ada617e","webpack:///./src/canvas.js","webpack:///./src/index.js","webpack:///external \"canvas\"","webpack:///external \"fs\"","webpack:///./src/canvas-image.js","webpack:///./src/mmcq.js"],"names":["createCanvas","loadImage","Image","width","height","src","Promise","resolve","reject","readFile","err","data","image","getPalette","getColor","getColorFromUrl","getImageData","getColorAsync","sourceImage","colorCount","quality","imageData","pixels","pixelCount","getPixelCount","pixelArray","i","offset","r","g","b","a","push","cmap","palette","imageUrl","callback","then","dominantColor","xhr","XMLHttpRequest","open","responseType","onload","status","uInt8Array","Uint8Array","response","binaryString","Array","length","String","fromCharCode","join","base64","window","btoa","onerror","send","CanvasImage","canvas","context","getContext","drawImage","clearRect","putImageData","quantize","pv","map","array","f","o","d","index","call","slice","naturalOrder","sum","reduce","p","max","Math","apply","sigbits","rshift","maxIterations","fractByPopulations","getColorIndex","PQueue","comparator","contents","sorted","sort","undefined","pop","VBox","r1","r2","g1","g2","b1","b2","histo","force","vbox","_volume","_count_set","npix","j","k","_count","_avg","ntot","mult","rsum","gsum","bsum","hval","histoindex","pixel","rval","gval","bval","CMap","vboxes","count","volume","color","avg","vb","size","peek","contains","nearest","d1","d2","pColor","sqrt","pow","lowest","idx","highest","getHisto","histosize","forEach","vboxFromPixels","rmin","rmax","gmin","gmax","bmin","bmax","medianCutApply","rw","gw","bw","maxw","copy","total","partialsum","lookaheadsum","doCut","dim1","dim2","left","right","vbox1","vbox2","count2","min","maxcolors","nColors","pq","iter","lh","target","ncolors","niters","pq2"],"mappings":"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","file":"color-bandit.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"canvas\"), require(\"fs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ColorBandit\", [\"canvas\", \"fs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ColorBandit\"] = factory(require(\"canvas\"), require(\"fs\"));\n\telse\n\t\troot[\"ColorBandit\"] = factory(root[\"canvas\"], root[\"fs\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1e90c9f0835e8ada617e","import Canvas from 'canvas';\nimport fs from 'fs';\n\nconst { Image } = Canvas;\n\nexport function createCanvas(width, height) {\n  return new Canvas(width, height);\n}\n\nexport function loadImage(src) {\n  return new Promise((resolve, reject) => {\n    fs.readFile(src, (err, data) => {\n      if (err) {\n        return reject(err);\n      }\n      const image = new Image();\n      image.src = data;\n      return resolve(image);\n    });\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/canvas.js","/*\n * Color Thief v2.0\n * by Lokesh Dhakar - http://www.lokeshdhakar.com\n *\n * Thanks\n * ------\n * Nick Rabinowitz - For creating quantize.js.\n * John Schulz - For clean up and optimization. @JFSIII\n * Nathan Spady - For adding drag and drop support to the demo page.\n *\n * License\n * -------\n * Copyright 2011, 2015 Lokesh Dhakar\n * Released under the MIT license\n * https://raw.githubusercontent.com/lokesh/color-thief/master/LICENSE\n *\n * @license\n */\n\nimport { loadImage } from './canvas';\nimport CanvasImage from './canvas-image';\nimport { quantize } from './mmcq';\n\n/**\n * Use the median cut algorithm provided by quantize.js\n * to cluster similar colors.\n *\n * BUGGY: Function does not always return the requested amount of colors.\n * It can be +/- 2.\n *\n * @param {HTMLImageElement} sourceImage\n *     The HTML image element to pull the color palette from.\n *\n * @param {number=} colorCount\n *     Determines the size of the palette; the number of colors returned.\n *     If not set, it defaults to 10.\n *\n * @param {number=} quality\n *     Quality is an optional argument. It needs to be an integer.\n *     1 is the highest quality settings. 10 is the default.\n *     There is a trade-off between quality and speed. The bigger\n *     the number, the faster the palette generation but the greater\n *     the likelihood that colors will be missed.\n *\n * @return {{r: number, g: number, b: number}[]}\n */\nexport function getPalette(sourceImage, colorCount = 10, quality = 10) {\n  if (colorCount < 2 || colorCount > 256) {\n    colorCount = 10;\n  }\n  if (quality < 1) {\n    quality = 10;\n  }\n\n  // Create custom CanvasImage object\n  const image = new CanvasImage(sourceImage);\n  const imageData = image.getImageData();\n  const pixels = imageData.data;\n  const pixelCount = image.getPixelCount();\n\n  // Store the RGB values in an array format suitable for quantize function\n  const pixelArray = [];\n  for (let i = 0, offset, r, g, b, a; i < pixelCount; i += quality) {\n    offset = i * 4;\n    r = pixels[offset + 0];\n    g = pixels[offset + 1];\n    b = pixels[offset + 2];\n    a = pixels[offset + 3];\n    // If pixel is mostly opaque and not white\n    if (a >= 125) {\n      if (!(r > 250 && g > 250 && b > 250)) {\n        pixelArray.push([r, g, b]);\n      }\n    }\n  }\n\n  // Send array to quantize function which clusters values\n  // using median cut algorithm\n  const cmap = quantize(pixelArray, colorCount);\n  const palette = cmap ? cmap.palette() : null;\n\n  return palette;\n}\n\n/**\n * Use the median cut algorithm provided by quantize.js to cluster similar\n * colors and return the base color from the largest cluster.\n *\n * @param {HTMLImageElement} sourceImage\n *     The HTML image element to pull the color palette from.\n *\n * @param {number=} quality\n *     Quality is an optional argument. It needs to be an integer.\n *     1 is the highest quality settings. 10 is the default. There is a\n *     trade-off between quality and speed. The bigger the number, the\n *     faster a color will be returned but the greater the likelihood that\n *     it will not be the visually most dominant color.\n *\n * @return {{r: number, g: number, b: number}}\n */\nexport function getColor(sourceImage, quality) {\n  const palette = getPalette(sourceImage, 5, quality);\n  return palette[0];\n}\n\nexport function getColorFromUrl(imageUrl, callback, quality) {\n  return loadImage(imageUrl).then((image) => {\n    const palette = getPalette(image, 5, quality);\n    const dominantColor = palette[0];\n    return dominantColor;\n  });\n}\n\nexport function getImageData(imageUrl) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', imageUrl, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (this.status == 200) {\n        const uInt8Array = new Uint8Array(this.response);\n        const binaryString = new Array(uInt8Array.length);\n        for (let i = 0; i < uInt8Array.length; ++i) {\n          binaryString[i] = String.fromCharCode(uInt8Array[i]);\n        }\n        const data = binaryString.join('');\n        const base64 = window.btoa(data);\n        resolve(`data:image/png;base64,${base64}`);\n      }\n    };\n    xhr.onerror = reject;\n    xhr.send();\n  });\n}\n\nexport function getColorAsync(imageUrl, callback, quality) {\n  return getImageData(imageUrl, loadImage).then((image) => {\n    const palette = getPalette(image, 5, quality);\n    return [palette[0], image];\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"canvas\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 3\n// module chunks = 0","import { createCanvas } from './canvas';\n\n/**\n * CanvasImage Class\n * Class that wraps the html image element and canvas.\n * It also simplifies some of the canvas context manipulation\n * with a set of helper functions.\n */\nexport default class CanvasImage {\n  constructor(image) {\n    const { width, height } = image;\n\n    this.canvas = createCanvas(width, height);\n    this.context = this.canvas.getContext('2d');\n\n    this.width = width;\n    this.height = height;\n\n    this.context.drawImage(image, 0, 0, this.width, this.height);\n  }\n\n  clear() {\n    this.context.clearRect(0, 0, this.width, this.height);\n  }\n\n  update(imageData) {\n    this.context.putImageData(imageData, 0, 0);\n  }\n\n  getPixelCount() {\n    return this.width * this.height;\n  }\n\n  getImageData() {\n    return this.context.getImageData(0, 0, this.width, this.height);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/canvas-image.js","/*!\n * quantize.js Copyright 2008 Nick Rabinowitz.\n * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php\n * @license\n */\n\n// fill out a couple protovis dependencies\n/*!\n * Block below copied from Protovis: http://mbostock.github.com/protovis/\n * Copyright 2010 Stanford Visualization Group\n * Licensed under the BSD License: http://www.opensource.org/licenses/bsd-license.php\n * @license\n */\nconst pv = {\n  map(array, f) {\n    const o = {};\n    return f\n      ? array.map((d, i) => { o.index = i; return f.call(o, d); })\n      : array.slice();\n  },\n  naturalOrder(a, b) {\n    return (a < b) ? -1 : ((a > b) ? 1 : 0);\n  },\n  sum(array, f) {\n    const o = {};\n    return array.reduce(\n      f\n        ? (p, d, i) => { o.index = i; return p + f.call(o, d); }\n        : (p, d) => p + d,\n      0);\n  },\n  max(array, f) {\n    return Math.max.apply(null, f ? pv.map(array, f) : array);\n  },\n};\n\n\n/**\n * Basic Javascript port of the MMCQ (modified median cut quantization)\n * algorithm from the Leptonica library (http://www.leptonica.com/).\n * Returns a color map you can use to map original pixels to the reduced\n * palette. Still a work in progress.\n *\n * @author Nick Rabinowitz\n * @example\n\n// array of pixels as [R,G,B] arrays\nvar myPixels = [[190,197,190], [202,204,200], [207,214,210], [211,214,211], [205,207,207]\n                // etc\n                ];\nvar maxColors = 4;\n\nvar cmap = MMCQ.quantize(myPixels, maxColors);\nvar newPalette = cmap.palette();\nvar newPixels = myPixels.map(function(p) {\n    return cmap.map(p);\n});\n\n */\n// private constants\nconst sigbits = 5;\nconst rshift = 8 - sigbits;\nconst maxIterations = 1000;\nconst fractByPopulations = 0.75;\n\n// get reduced-space color index for a pixel\nfunction getColorIndex(r, g, b) {\n  return (r << (2 * sigbits)) + (g << sigbits) + b;\n}\n\n// Simple priority queue\nclass PQueue {\n  constructor(comparator) {\n    this.comparator = comparator;\n    this.contents = [];\n    this.sorted = false;\n  }\n\n  sort() {\n    this.contents.sort(this.comparator);\n    this.sorted = true;\n  }\n\n  push(o) {\n    this.contents.push(o);\n    this.sorted = false;\n  }\n\n  peek(index) {\n    if (!this.sorted) this.sort();\n    if (index === undefined) index = this.contents.length - 1;\n    return this.contents[index];\n  }\n\n  pop() {\n    if (!this.sorted) this.sort();\n    return this.contents.pop();\n  }\n\n  size() {\n    return this.contents.length;\n  }\n\n  map(f) {\n    return this.contents.map(f);\n  }\n\n  debug() {\n    if (!this.sorted) this.sort();\n    return this.contents;\n  }\n}\n\n// 3d color space box\nclass VBox {\n  constructor(r1, r2, g1, g2, b1, b2, histo) {\n    this.r1 = r1;\n    this.r2 = r2;\n    this.g1 = g1;\n    this.g2 = g2;\n    this.b1 = b1;\n    this.b2 = b2;\n    this.histo = histo;\n  }\n\n  volume(force) {\n    var vbox = this;\n    if (!vbox._volume || force) {\n      vbox._volume = ((vbox.r2 - vbox.r1 + 1) * (vbox.g2 - vbox.g1 + 1) * (vbox.b2 - vbox.b1 + 1));\n    }\n    return vbox._volume;\n  }\n\n  count(force) {\n    var vbox = this,\n      histo = vbox.histo;\n    if (!vbox._count_set || force) {\n      var npix = 0,\n        index, i, j, k;\n      for (i = vbox.r1; i <= vbox.r2; i++) {\n        for (j = vbox.g1; j <= vbox.g2; j++) {\n          for (k = vbox.b1; k <= vbox.b2; k++) {\n            index = getColorIndex(i, j, k);\n            npix += (histo[index] || 0);\n          }\n        }\n      }\n      vbox._count = npix;\n      vbox._count_set = true;\n    }\n    return vbox._count;\n  }\n\n  copy() {\n    var vbox = this;\n    return new VBox(vbox.r1, vbox.r2, vbox.g1, vbox.g2, vbox.b1, vbox.b2, vbox.histo);\n  }\n\n  avg(force) {\n    var vbox = this,\n      histo = vbox.histo;\n    if (!vbox._avg || force) {\n      var ntot = 0,\n        mult = 1 << (8 - sigbits),\n        rsum = 0,\n        gsum = 0,\n        bsum = 0,\n        hval,\n        i, j, k, histoindex;\n      for (i = vbox.r1; i <= vbox.r2; i++) {\n        for (j = vbox.g1; j <= vbox.g2; j++) {\n          for (k = vbox.b1; k <= vbox.b2; k++) {\n            histoindex = getColorIndex(i, j, k);\n            hval = histo[histoindex] || 0;\n            ntot += hval;\n            rsum += (hval * (i + 0.5) * mult);\n            gsum += (hval * (j + 0.5) * mult);\n            bsum += (hval * (k + 0.5) * mult);\n          }\n        }\n      }\n      if (ntot) {\n        vbox._avg = [~~(rsum / ntot), ~~(gsum / ntot), ~~(bsum / ntot)];\n      } else {\n        vbox._avg = [\n          ~~(mult * (vbox.r1 + vbox.r2 + 1) / 2),\n          ~~(mult * (vbox.g1 + vbox.g2 + 1) / 2),\n          ~~(mult * (vbox.b1 + vbox.b2 + 1) / 2)\n        ];\n      }\n    }\n    return vbox._avg;\n  }\n\n  contains(pixel) {\n    var vbox = this,\n      rval = pixel[0] >> rshift;\n    gval = pixel[1] >> rshift;\n    bval = pixel[2] >> rshift;\n    return (rval >= vbox.r1 && rval <= vbox.r2 &&\n      gval >= vbox.g1 && gval <= vbox.g2 &&\n      bval >= vbox.b1 && bval <= vbox.b2);\n  }\n}\n\n// Color map\nclass CMap {\n  constructor() {\n    this.vboxes = new PQueue((a, b) => {\n      return pv.naturalOrder(\n        a.vbox.count() * a.vbox.volume(),\n        b.vbox.count() * b.vbox.volume()\n      );\n    });\n  }\n\n  push(vbox) {\n    this.vboxes.push({\n      vbox: vbox,\n      color: vbox.avg()\n    });\n  }\n\n  palette() {\n    return this.vboxes.map(function (vb) { return vb.color; });\n  }\n\n  size() {\n    return this.vboxes.size();\n  }\n\n  map(color) {\n    var vboxes = this.vboxes;\n    for (var i = 0; i < vboxes.size(); i++) {\n      if (vboxes.peek(i).vbox.contains(color)) {\n        return vboxes.peek(i).color;\n      }\n    }\n    return this.nearest(color);\n  }\n\n  nearest(color) {\n    var vboxes = this.vboxes,\n      d1, d2, pColor;\n    for (var i = 0; i < vboxes.size(); i++) {\n      d2 = Math.sqrt(\n        Math.pow(color[0] - vboxes.peek(i).color[0], 2) +\n        Math.pow(color[1] - vboxes.peek(i).color[1], 2) +\n        Math.pow(color[2] - vboxes.peek(i).color[2], 2)\n      );\n      if (d2 < d1 || d1 === undefined) {\n        d1 = d2;\n        pColor = vboxes.peek(i).color;\n      }\n    }\n    return pColor;\n  }\n\n  forcebw() {\n    // XXX: won't  work yet\n    var vboxes = this.vboxes;\n    vboxes.sort((a, b) => pv.naturalOrder(pv.sum(a.color), pv.sum(b.color)));\n\n    // force darkest color to black if everything < 5\n    var lowest = vboxes[0].color;\n    if (lowest[0] < 5 && lowest[1] < 5 && lowest[2] < 5)\n      vboxes[0].color = [0, 0, 0];\n\n    // force lightest color to white if everything > 251\n    var idx = vboxes.length - 1,\n      highest = vboxes[idx].color;\n    if (highest[0] > 251 && highest[1] > 251 && highest[2] > 251)\n      vboxes[idx].color = [255, 255, 255];\n  }\n}\n\n// histo (1-d array, giving the number of pixels in\n// each quantized region of color space), or null on error\nfunction getHisto(pixels) {\n  var histosize = 1 << (3 * sigbits),\n    histo = new Array(histosize),\n    index, rval, gval, bval;\n  pixels.forEach((pixel) => {\n    rval = pixel[0] >> rshift;\n    gval = pixel[1] >> rshift;\n    bval = pixel[2] >> rshift;\n    index = getColorIndex(rval, gval, bval);\n    histo[index] = (histo[index] || 0) + 1;\n  });\n  return histo;\n}\n\nfunction vboxFromPixels(pixels, histo) {\n  var rmin = 1000000, rmax = 0,\n    gmin = 1000000, gmax = 0,\n    bmin = 1000000, bmax = 0,\n    rval, gval, bval;\n  // find min/max\n  pixels.forEach((pixel) => {\n    rval = pixel[0] >> rshift;\n    gval = pixel[1] >> rshift;\n    bval = pixel[2] >> rshift;\n    if (rval < rmin) rmin = rval;\n    else if (rval > rmax) rmax = rval;\n    if (gval < gmin) gmin = gval;\n    else if (gval > gmax) gmax = gval;\n    if (bval < bmin) bmin = bval;\n    else if (bval > bmax) bmax = bval;\n  });\n  return new VBox(rmin, rmax, gmin, gmax, bmin, bmax, histo);\n}\n\nfunction medianCutApply(histo, vbox) {\n  if (!vbox.count()) return;\n\n  var rw = vbox.r2 - vbox.r1 + 1,\n    gw = vbox.g2 - vbox.g1 + 1,\n    bw = vbox.b2 - vbox.b1 + 1,\n    maxw = pv.max([rw, gw, bw]);\n  // only one pixel, no split\n  if (vbox.count() == 1) {\n    return [vbox.copy()];\n  }\n  /* Find the partial sum arrays along the selected axis. */\n  var total = 0,\n    partialsum = [],\n    lookaheadsum = [],\n    i, j, k, sum, index;\n  if (maxw == rw) {\n    for (i = vbox.r1; i <= vbox.r2; i++) {\n      sum = 0;\n      for (j = vbox.g1; j <= vbox.g2; j++) {\n        for (k = vbox.b1; k <= vbox.b2; k++) {\n          index = getColorIndex(i, j, k);\n          sum += (histo[index] || 0);\n        }\n      }\n      total += sum;\n      partialsum[i] = total;\n    }\n  }\n  else if (maxw == gw) {\n    for (i = vbox.g1; i <= vbox.g2; i++) {\n      sum = 0;\n      for (j = vbox.r1; j <= vbox.r2; j++) {\n        for (k = vbox.b1; k <= vbox.b2; k++) {\n          index = getColorIndex(j, i, k);\n          sum += (histo[index] || 0);\n        }\n      }\n      total += sum;\n      partialsum[i] = total;\n    }\n  }\n  else {  /* maxw == bw */\n    for (i = vbox.b1; i <= vbox.b2; i++) {\n      sum = 0;\n      for (j = vbox.r1; j <= vbox.r2; j++) {\n        for (k = vbox.g1; k <= vbox.g2; k++) {\n          index = getColorIndex(j, k, i);\n          sum += (histo[index] || 0);\n        }\n      }\n      total += sum;\n      partialsum[i] = total;\n    }\n  }\n  partialsum.forEach((d, i) => {\n    lookaheadsum[i] = total - d;\n  });\n  function doCut(color) {\n    var dim1 = color + '1',\n      dim2 = color + '2',\n      left, right, vbox1, vbox2, d2, count2 = 0;\n    for (i = vbox[dim1]; i <= vbox[dim2]; i++) {\n      if (partialsum[i] > total / 2) {\n        vbox1 = vbox.copy();\n        vbox2 = vbox.copy();\n        left = i - vbox[dim1];\n        right = vbox[dim2] - i;\n        if (left <= right)\n          d2 = Math.min(vbox[dim2] - 1, ~~(i + right / 2));\n        else d2 = Math.max(vbox[dim1], ~~(i - 1 - left / 2));\n        // avoid 0-count boxes\n        while (!partialsum[d2]) d2++;\n        count2 = lookaheadsum[d2];\n        while (!count2 && partialsum[d2 - 1]) count2 = lookaheadsum[--d2];\n        // set dimensions\n        vbox1[dim2] = d2;\n        vbox2[dim1] = vbox1[dim2] + 1;\n        return [vbox1, vbox2];\n      }\n    }\n\n  }\n  // determine the cut planes\n  return maxw == rw ? doCut('r') :\n    maxw == gw ? doCut('g') :\n      doCut('b');\n}\n\nexport function quantize(pixels, maxcolors) {\n  // short-circuit\n  if (!pixels.length || maxcolors < 2 || maxcolors > 256) {\n    return false;\n  }\n\n  // XXX: check color content and convert to grayscale if insufficient\n\n  var histo = getHisto(pixels),\n    histosize = 1 << (3 * sigbits);\n\n  // check that we aren't below maxcolors already\n  var nColors = 0;\n  histo.forEach(function () { nColors++; });\n  if (nColors <= maxcolors) {\n    // XXX: generate the new colors from the histo and return\n  }\n\n  // get the beginning vbox from the colors\n  var vbox = vboxFromPixels(pixels, histo),\n    pq = new PQueue((a, b) => pv.naturalOrder(a.count(), b.count()));\n  pq.push(vbox);\n\n  // inner function to do the iteration\n  function iter(lh, target) {\n    var ncolors = 1,\n      niters = 0,\n      vbox;\n    while (niters < maxIterations) {\n      vbox = lh.pop();\n      if (!vbox.count()) { /* just put it back */\n        lh.push(vbox);\n        niters++;\n        continue;\n      }\n      // do the cut\n      var vboxes = medianCutApply(histo, vbox),\n        vbox1 = vboxes[0],\n        vbox2 = vboxes[1];\n\n      if (!vbox1) {\n        return;\n      }\n      lh.push(vbox1);\n      if (vbox2) {  /* vbox2 can be null */\n        lh.push(vbox2);\n        ncolors++;\n      }\n      if (ncolors >= target) return;\n      if (niters++ > maxIterations) {\n        return;\n      }\n    }\n  }\n\n  // first set of colors, sorted by population\n  iter(pq, fractByPopulations * maxcolors);\n\n  // Re-sort by the product of pixel occupancy times the size in color space.\n  var pq2 = new PQueue((a, b) =>\n    pv.naturalOrder(a.count() * a.volume(), b.count() * b.volume()));\n  while (pq.size()) {\n    pq2.push(pq.pop());\n  }\n\n  // next set - generate the median cuts using the (npix * vol) sorting.\n  iter(pq2, maxcolors - pq2.size());\n\n  // calculate the actual colors\n  var cmap = new CMap();\n  while (pq2.size()) {\n    cmap.push(pq2.pop());\n  }\n\n  return cmap;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mmcq.js"],"sourceRoot":""}